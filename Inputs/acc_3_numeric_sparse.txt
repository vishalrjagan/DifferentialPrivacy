input int q0 -1 1;
int out0_det;
out0_det = zero;
int out0_rand;
out0_rand = zero;
bool out0_det_is_bot;
out0_det_is_bot = true;
bool out0_rand_is_bot;
out0_rand_is_bot = true;
bool compare0_det;
bool compare0_rand;
real noisy_thresh0;
real noisy_q0;
input int q1 -1 1;
int out1_det;
out1_det = zero;
int out1_rand;
out1_rand = zero;
bool out1_det_is_bot;
out1_det_is_bot = true;
bool out1_rand_is_bot;
out1_rand_is_bot = true;
bool compare1_det;
bool compare1_rand;
real noisy_thresh1;
real noisy_q1;
input int q2 -1 1;
int out2_det;
out2_det = zero;
int out2_rand;
out2_rand = zero;
bool out2_det_is_bot;
out2_det_is_bot = true;
bool out2_rand_is_bot;
out2_rand_is_bot = true;
bool compare2_det;
bool compare2_rand;
real noisy_thresh2;
real noisy_q2;

int one;
one = 1;
int zero;
zero = 0;
int count_det;
count_det = 0;
int count_rand;
count_rand = 0;
bool done_det;
bool done_rand;
int thresh;
thresh = 0;
real gamma;
gamma = 1;
real noisy_thresh0;
noisy_thresh0 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
done_det = count_det >= c;
if done_det then
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q0 = Lap "( 9 * c ) / ( 2 * eps )" q0;
compare0_rand = noisy_q0 >= noisy_thresh0;
if compare0_rand then
out0_rand = noisy_q0;
out0_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh1;
noisy_thresh1 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q1 = Lap "( 9 * c ) / ( 2 * eps )" q1;
compare1_rand = noisy_q1 >= noisy_thresh1;
if compare1_rand then
out1_rand = noisy_q1;
out1_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh2;
noisy_thresh2 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q2 = Lap "( 9 * c ) / ( 2 * eps )" q2;
compare2_rand = noisy_q2 >= noisy_thresh2;
if compare2_rand then
out2_rand = noisy_q2;
out2_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh3;
noisy_thresh3 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
fi;
fi;
fi;
else
compare0_det = q0 >= thresh;
if compare0_det then
out0_det = q0;
out0_det_is_bot = false;
count_det = count_det + one;
fi;
done_det = count_det >= c;
if done_det then
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q0 = Lap "( 9 * c ) / ( 2 * eps )" q0;
compare0_rand = noisy_q0 >= noisy_thresh0;
if compare0_rand then
out0_rand = noisy_q0;
out0_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh1;
noisy_thresh1 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q1 = Lap "( 9 * c ) / ( 2 * eps )" q1;
compare1_rand = noisy_q1 >= noisy_thresh1;
if compare1_rand then
out1_rand = noisy_q1;
out1_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh2;
noisy_thresh2 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q2 = Lap "( 9 * c ) / ( 2 * eps )" q2;
compare2_rand = noisy_q2 >= noisy_thresh2;
if compare2_rand then
out2_rand = noisy_q2;
out2_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh3;
noisy_thresh3 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
fi;
fi;
fi;
else
compare1_det = q1 >= thresh;
if compare1_det then
out1_det = q1;
out1_det_is_bot = false;
count_det = count_det + one;
fi;
done_det = count_det >= c;
if done_det then
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q0 = Lap "( 9 * c ) / ( 2 * eps )" q0;
compare0_rand = noisy_q0 >= noisy_thresh0;
if compare0_rand then
out0_rand = noisy_q0;
out0_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh1;
noisy_thresh1 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q1 = Lap "( 9 * c ) / ( 2 * eps )" q1;
compare1_rand = noisy_q1 >= noisy_thresh1;
if compare1_rand then
out1_rand = noisy_q1;
out1_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh2;
noisy_thresh2 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q2 = Lap "( 9 * c ) / ( 2 * eps )" q2;
compare2_rand = noisy_q2 >= noisy_thresh2;
if compare2_rand then
out2_rand = noisy_q2;
out2_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh3;
noisy_thresh3 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
fi;
fi;
fi;
else
compare2_det = q2 >= thresh;
if compare2_det then
out2_det = q2;
out2_det_is_bot = false;
count_det = count_det + one;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q0 = Lap "( 9 * c ) / ( 2 * eps )" q0;
compare0_rand = noisy_q0 >= noisy_thresh0;
if compare0_rand then
out0_rand = noisy_q0;
out0_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh1;
noisy_thresh1 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q1 = Lap "( 9 * c ) / ( 2 * eps )" q1;
compare1_rand = noisy_q1 >= noisy_thresh1;
if compare1_rand then
out1_rand = noisy_q1;
out1_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh2;
noisy_thresh2 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
done_rand = count_rand >= c;
if done_rand then
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
noisy_q2 = Lap "( 9 * c ) / ( 2 * eps )" q2;
compare2_rand = noisy_q2 >= noisy_thresh2;
if compare2_rand then
out2_rand = noisy_q2;
out2_rand_is_bot = false;
count_rand = count_rand + one;
real noisy_thresh3;
noisy_thresh3 = Lap "( 9 * c ) / ( 4 * eps )" thresh;
fi;
if out0_det_is_bot then
if out0_rand_is_bot then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out0_rand_is_bot then
return zero;
else
real cast_q0;
cast_q0 = out0_det;
real minus_gamma0;
minus_gamma0 = cast_q0 - gamma;
real plus_gamma0;
plus_gamma0 = cast_q0 + gamma;
bool conjunct1;
conjunct1 = noisy_q0 > minus_gamma;
conjunct2 = noisy_q0 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out1_det_is_bot then
if out1_rand_is_bot then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
else
if out1_rand_is_bot then
return zero;
else
real cast_q1;
cast_q1 = out1_det;
real minus_gamma1;
minus_gamma1 = cast_q1 - gamma;
real plus_gamma1;
plus_gamma1 = cast_q1 + gamma;
bool conjunct1;
conjunct1 = noisy_q1 > minus_gamma;
conjunct2 = noisy_q1 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
if out2_det_is_bot then
if out2_rand_is_bot then
return one;
else
return zero;
fi;
else
if out2_rand_is_bot then
return zero;
else
real cast_q2;
cast_q2 = out2_det;
real minus_gamma2;
minus_gamma2 = cast_q2 - gamma;
real plus_gamma2;
plus_gamma2 = cast_q2 + gamma;
bool conjunct1;
conjunct1 = noisy_q2 > minus_gamma;
conjunct2 = noisy_q2 < plus_gamma;
bool conjunction;
conjunction = conjunct1 && conjunct2;
if conjunction then
return one;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
else
return zero;
fi;
fi;
fi;
fi;
fi;
fi;
fi;
fi;
fi;
